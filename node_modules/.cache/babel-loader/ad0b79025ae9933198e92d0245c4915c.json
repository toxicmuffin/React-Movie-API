{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toxic\\\\Documents\\\\JCCC\\\\WEB234\\\\movies\\\\src\\\\containers\\\\App\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MovieList, MovieDetails } from '../';\nimport './app.css';\n\nfunction App() {\n  const [movies, setMovies] = useState(null);\n\n  const fetchMovies = async () => {\n    // url includes API key that can be received from https://developers.themoviedb.org/3/getting-started/introduction\n    const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=6198fb338649c02a1097eb2ecb2f43f4`;\n    await fetch(url).then(response => response.json()).then(json => setMovies(json));\n  };\n\n  useEffect(() => {\n    // fetch movies and set them to state on \"mount\"\n    fetchMovies();\n  }, []);\n  return movies && React.createElement(\"div\", {\n    className: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(MovieList, {\n    movies: movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/:id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(MovieDetails, {\n    movies: movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/toxic/Documents/JCCC/WEB234/movies/src/containers/App/index.js"],"names":["React","useState","useEffect","BrowserRouter","Route","MovieList","MovieDetails","App","movies","setMovies","fetchMovies","url","fetch","then","response","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,KAAxC;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC9B;AACA,UAAMC,GAAG,GAAI,8GAAb;AACA,UAAMC,KAAK,CAACD,GAAD,CAAL,CACHE,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEE,IAAI,IAAIN,SAAS,CAACM,IAAD,CAFnB,CAAN;AAGD,GAND;;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAIA,SACEF,MAAM,IACJ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF,CAFJ;AAgBD;;AAAA;AAGD,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MovieList, MovieDetails } from '../';\n\nimport './app.css';\n\nfunction App() {\n  const [movies, setMovies] = useState(null);\n\n  const fetchMovies = async () => {\n    // url includes API key that can be received from https://developers.themoviedb.org/3/getting-started/introduction\n    const url = `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=6198fb338649c02a1097eb2ecb2f43f4`;\n    await fetch(url)\n      .then(response => response.json())\n      .then(json => setMovies(json));\n  };\n  useEffect(() => {\n    // fetch movies and set them to state on \"mount\"\n    fetchMovies();\n  }, []);\n  return (\n    movies && (\n      <div className=\"canvas\">\n        <BrowserRouter>\n          <div className=\"wrapper\">\n            <Route exact path=\"/\">\n              <MovieList movies={movies} />\n            </Route>\n            <Route path=\"/:id\">\n              <MovieDetails movies={movies} />\n            </Route>\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  );\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}